(window.webpackJsonp=window.webpackJsonp||[]).push([[29],{388:function(t,a,s){"use strict";s.r(a);var e=s(14),n=Object(e.a)({},(function(){var t=this,a=t.$createElement,s=t._self._c||a;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h1",{attrs:{id:"java的强／弱／软／虚引用"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#java的强／弱／软／虚引用"}},[t._v("#")]),t._v(" java的强／弱／软／虚引用")]),t._v(" "),s("p",[t._v("这篇文章讨论java的四种引用类型。")]),t._v(" "),s("h2",{attrs:{id:"强引用"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#强引用"}},[t._v("#")]),t._v(" 强引用")]),t._v(" "),s("p",[t._v("强引用是我们最常用的引用类型。类似val obj=Any()的引用即为强引用。任何被强引用指向的对象均不适合于GC。")]),t._v(" "),s("h2",{attrs:{id:"软引用"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#软引用"}},[t._v("#")]),t._v(" 软引用")]),t._v(" "),s("p",[t._v("在jvm绝对需要内存前，软引用指向的对象不会被回收。")]),t._v(" "),s("p",[t._v("建立软引用代码如下：")]),t._v(" "),s("div",{staticClass:"language-kotlin extra-class"},[s("pre",{pre:!0,attrs:{class:"language-kotlin"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("val")]),t._v(" builder "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("StringBuilder")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("val")]),t._v(" reference1 "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("SoftReference")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("builder"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),s("p",[t._v("软引用的取得与清除:")]),t._v(" "),s("div",{staticClass:"language-kotlin extra-class"},[s("pre",{pre:!0,attrs:{class:"language-kotlin"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("val")]),t._v(" builder1"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" StringBuilder "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" reference2"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("get")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\nreference2"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("clear")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("val")]),t._v(" builder2"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" StringBuilder "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" reference2"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("get")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// null")]),t._v("\n")])])]),s("p",[t._v("或是初始化时与引用队列关联：")]),t._v(" "),s("div",{staticClass:"language-kotlin extra-class"},[s("pre",{pre:!0,attrs:{class:"language-kotlin"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("val")]),t._v(" referenceQueue "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" ReferenceQueue"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("StringBuilder"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("val")]),t._v(" reference2 "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("SoftReference")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("builder"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" referenceQueue"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),s("p",[t._v("软引用使用前要记得判空：")]),t._v(" "),s("div",{staticClass:"language-kotlin extra-class"},[s("pre",{pre:!0,attrs:{class:"language-kotlin"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("val")]),t._v(" builder3"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" StringBuilder "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" reference2"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("get")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("builder3 "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("null")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" \n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// GC hasn't removed the instance yet")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("else")]),t._v(" \n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// GC has cleared the instance")]),t._v("\n")])])]),s("h2",{attrs:{id:"弱引用"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#弱引用"}},[t._v("#")]),t._v(" 弱引用")]),t._v(" "),s("p",[s("strong",[t._v("当弱引用对象不可达时，GC会将其清除。")])]),t._v(" "),s("p",[t._v("弱引用对象会被GC优先回收，GC不会等到需要内存的时候再去回收弱引用对象。")]),t._v(" "),s("p",[t._v("弱可达性意味着"),s("strong",[t._v("这个对象既没有被强引用指向，也没有被软引用指向。")]),t._v(" 唯有遍历弱引用，才能达到该对象。")]),t._v(" "),s("p",[t._v("GC会优先清除弱引用，所以被引用对象将不再可达。然后这个引用会放置在引用队列中（如果事先给弱引用关联了引用队列），我们可以从引用队列中拿到被清除的引用。")]),t._v(" "),s("p",[t._v("与此同时，不可达的软引用对象将被GC回收。")]),t._v(" "),s("h3",{attrs:{id:"使用场景"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#使用场景"}},[t._v("#")]),t._v(" 使用场景")]),t._v(" "),s("p",[t._v("根据java官方文档，"),s("strong",[t._v("弱引用最常用于实现规范化的映射。")]),t._v(" 如果某映射只有一个特定值的实例，这个映射就是规范化的。")]),t._v(" "),s("p",[s("strong",[t._v("WeakHashMap就使用了弱引用。")]),t._v(" 它实现了"),s("em",[t._v("Map")]),t._v("接口，但是每个键都使用弱引用来存储。当GC移除键后，与键关联的实体也一并删除。")]),t._v(" "),s("p",[t._v("另一个使用场景是解决"),s("a",{attrs:{href:"https://en.wikipedia.org/wiki/Lapsed_listener_problem",target:"_blank",rel:"noopener noreferrer"}},[t._v("Lapsed Listener"),s("OutboundLink")],1),t._v(" 问题。")]),t._v(" "),s("p",[t._v("发布者拥有对所有订阅者的强引用，以此来通知订阅者有事件发生。但是"),s("strong",[t._v("如果订阅者不能成功地取消订阅，就会出现内存问题。")])]),t._v(" "),s("p",[t._v("因为发布者依然持有对订阅者的强引用，订阅者是不会被GC回收的，这样就产生了内存泄漏。")]),t._v(" "),s("p",[t._v("解决方法是发布者对订阅者持有弱引用，允许订阅者被垃圾回收，而不需要取消订阅。（注意这并不是完整的解决方案，它也会引入一些这里没提到的其他的问题）")]),t._v(" "),s("h3",{attrs:{id:"弱引用代码实例"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#弱引用代码实例"}},[t._v("#")]),t._v(" 弱引用代码实例")]),t._v(" "),s("p",[t._v("弱引用由"),s("em",[t._v("java.lang.ref.WeakReference")]),t._v("类表示。可以通过传入需要引用的对象来初始化弱引用。也可以提供一个相关联的引用队列。")]),t._v(" "),s("div",{staticClass:"language-kotlin extra-class"},[s("pre",{pre:!0,attrs:{class:"language-kotlin"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("val")]),t._v(" referent "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("Any")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("val")]),t._v(" referenceQueue "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" ReferenceQueue"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("Any"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("val")]),t._v(" weakReference1"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" WeakReference"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("WeakReference")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("referent"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("val")]),t._v(" weakReference2"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" WeakReference"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("WeakReference")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("referent"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" referenceQueue"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),s("p",[t._v("其余操作均与上文的软引用相同。")]),t._v(" "),s("h2",{attrs:{id:"虚引用"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#虚引用"}},[t._v("#")]),t._v(" 虚引用")]),t._v(" "),s("p",[s("strong",[t._v("虚引用无法被直接取得。")]),t._v(" 这也是为什么一定需要引用队列来使用虚引用。"),s("strong",[t._v("GC执行finalize()方法后")]),t._v(" ，虚引用会被添加到引用队列。但是这时对象示实例仍存在内存中。")]),t._v(" "),s("h3",{attrs:{id:"使用场景-2"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#使用场景-2"}},[t._v("#")]),t._v(" 使用场景")]),t._v(" "),s("p",[t._v("虚引用可以用来"),s("strong",[t._v("确定一个对象何时从内存中释放")]),t._v(" ，我们可以等一个占空间很大的对象被移除再加载另一个对象。虚引用还可以让我们"),s("strong",[t._v("使用自定义的finalize方法")]),t._v("。")]),t._v(" "),s("h3",{attrs:{id:"代码实例"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#代码实例"}},[t._v("#")]),t._v(" 代码实例")]),t._v(" "),s("p",[t._v("详细讲一下上文第二个使用场景，首先需要 PhantomReference的子类定义如何清除对象的方法。")]),t._v(" "),s("div",{staticClass:"language-kotlin extra-class"},[s("pre",{pre:!0,attrs:{class:"language-kotlin"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("LargeObjectFinalizer")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("referent"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" Any"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("?")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" q"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" ReferenceQueue"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("in")]),t._v(" Any"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("?")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("?")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" PhantomReference"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("Any"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("?")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("referent"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" q"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("fun")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("finalizeResources")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// free resources")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("println")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"clearing ..."')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("p",[t._v("现在可以控制每一个对象的finalization处理：")]),t._v(" "),s("div",{staticClass:"language-kotlin extra-class"},[s("pre",{pre:!0,attrs:{class:"language-kotlin"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("val")]),t._v(" referenceQueue "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" ReferenceQueue"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("Any"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("?")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("val")]),t._v(" references"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" MutableList"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("LargeObjectFinalizer"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("ArrayList")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" largeObjects"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" MutableList"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("Any"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("?")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("?")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("ArrayList")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("repeat")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("10")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("val")]),t._v(" largeObject "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("Any")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    largeObjects"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!!")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("add")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("largeObject"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    references"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("add")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("LargeObjectFinalizer")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("largeObject"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" referenceQueue"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\nlargeObjects "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("null")]),t._v("\nSystem"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("gc")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" referenceFromQueue"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" Reference"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("reference "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("in")]),t._v(" references"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" \n    "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("println")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("reference"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("isEnqueued"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("while")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("referenceQueue"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("poll")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("also")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" referenceFromQueue "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" it "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("null")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("referenceFromQueue "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("as")]),t._v(" LargeObjectFinalizer"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("finalizeResources")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    referenceFromQueue"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("clear")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("p",[t._v("先初始化所有必须的对象：")]),t._v(" "),s("ul",[s("li",[t._v("referenceQueue 用于跟踪入队的引用")]),t._v(" "),s("li",[t._v("references 执行清除工作")]),t._v(" "),s("li",[t._v("largeObjects 假装是个很大的数据结构")])]),t._v(" "),s("p",[t._v("接下来初始化largeObject并且将其加入largeObjects的列表中，再把largeObject与引用队列相关联，构成虚引用，加入到虚引用列表中。")]),t._v(" "),s("p",[t._v("在调用GC前，我们可以通过取消largeObjects的引用，手动释放数据。System.gc()相当于调用Runtime.getRuntime().gc() (可查看java源码得知)。")]),t._v(" "),s("p",[t._v("不过Systm.gc并不会立即触发gc，它只是通知JVM去执行gc。")]),t._v(" "),s("p",[t._v("下面for循环内确保所有虚引用已经进入引用队列。每个引用均会打印true。")]),t._v(" "),s("p",[t._v("最后使用while循环轮讯入队引用并且执行自定义的清除工作。")])])}),[],!1,null,null,null);a.default=n.exports}}]);