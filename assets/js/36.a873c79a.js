(window.webpackJsonp=window.webpackJsonp||[]).push([[36],{397:function(t,e,i){"use strict";i.r(e);var n=i(14),l=Object(n.a)({},(function(){var t=this,e=t.$createElement,i=t._self._c||e;return i("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[i("h1",{attrs:{id:"在idea的kotlin项目里创建测试用例"}},[i("a",{staticClass:"header-anchor",attrs:{href:"#在idea的kotlin项目里创建测试用例"}},[t._v("#")]),t._v(" 在IDEA的kotlin项目里创建测试用例")]),t._v(" "),i("ol",[i("li",[t._v("鼠标选中类名，然后alt+ctrl，选中create test。")]),t._v(" "),i("li",[t._v("如果有test文件夹，会在里面创建测试类，没有的话会询问是否就在类所在文件夹下创建测试类。")]),t._v(" "),i("li",[t._v("在Testing library里选择测试框架（一般junit5），然后点fix安装依赖。(一定记得提前挂好vpn)")]),t._v(" "),i("li",[t._v("这个时候呢会发现"),i("code",[t._v("import org.junit.jupiter.api.Test")]),t._v("是提示"),i("code",[t._v("Unresolved reference: junit")]),t._v("的，我们需要一个"),i("code",[t._v("kotlin-test-junit5")]),t._v("依赖，它提供了"),i("code",[t._v("kotlin.test")]),t._v("的junit5绑定。（看下源码就知道怎么回事了）")]),t._v(" "),i("li",[t._v("下面就只要把库加到项目里就是了，按快捷键alt+ctrl+shift+s调出project structure，选择project settings里的libraries，点+号，点from maven。会从maven仓库里找到我们想要的包。")]),t._v(" "),i("li",[t._v("在搜索框里输入kotlin-test-junit5，点击搜索，然后在下拉菜单里找到对应kotlin版本的依赖，点击ok下载。")]),t._v(" "),i("li",[t._v("接下来"),i("code",[t._v("@Test")]),t._v("标签就可以正常使用了！")]),t._v(" "),i("li",[t._v("注意@Test标记的测试方法必须包裹在测试类中，否则无法执行。")])])])}),[],!1,null,null,null);e.default=l.exports}}]);