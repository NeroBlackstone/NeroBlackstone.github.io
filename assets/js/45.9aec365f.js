(window.webpackJsonp=window.webpackJsonp||[]).push([[45],{409:function(a,e,t){"use strict";t.r(e);var s=t(14),n=Object(s.a)({},(function(){var a=this,e=a.$createElement,t=a._self._c||e;return t("ContentSlotsDistributor",{attrs:{"slot-key":a.$parent.slotKey}},[t("h1",{attrs:{id:"从零开始haskell的学习"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#从零开始haskell的学习"}},[a._v("#")]),a._v(" 从零开始haskell的学习")]),a._v(" "),t("h2",{attrs:{id:"准备工作"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#准备工作"}},[a._v("#")]),a._v(" 准备工作")]),a._v(" "),t("p",[a._v("安装ghci（Glasgow Haskell Compiler's interactive environment）和stack（haskell的包管理工具）。")]),a._v(" "),t("h2",{attrs:{id:"ghci的使用"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#ghci的使用"}},[a._v("#")]),a._v(" ghci的使用")]),a._v(" "),t("h3",{attrs:{id:"更改默认prompt"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#更改默认prompt"}},[a._v("#")]),a._v(" 更改默认prompt")]),a._v(" "),t("p",[a._v("默认的prompt是Prelude，可以用下面的指令更改：")]),a._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v(':set prompt "ghci>"\n')])])]),t("h3",{attrs:{id:"简单的数学运算"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#简单的数学运算"}},[a._v("#")]),a._v(" 简单的数学运算")]),a._v(" "),t("p",[a._v("ghci可以执行简单的四则运算：")]),a._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v("ghci> 2 + 15  \n17  \nghci> 49 * 100  \n4900  \nghci> 1892 - 1472  \n420  \nghci> 5 / 2  \n2.5\n")])])]),t("h3",{attrs:{id:"更复杂的数学运算"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#更复杂的数学运算"}},[a._v("#")]),a._v(" 更复杂的数学运算")]),a._v(" "),t("p",[a._v("更复杂的数学运算也是可以的，ghci可以正确判断优先级，也可以使用圆括号来精确描述优先级。（负数最好加上括号）")]),a._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v("ghci> (50 * 100) - 4999  \n1  \nghci> 50 * 100 - 4999  \n1  \nghci> 50 * (100 - 4999)  \n-244950\n")])])]),t("p",[a._v("布尔运算也非常的直观, 可以使用not来对True或False取反(注意一定要大写这两个词)")]),a._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v("ghci> True && False  \nFalse  \nghci> True && True  \nTrue  \nghci> False || True  \nTrue   \nghci> not False  \nTrue  \nghci> not (True && True)  \nFalse\n")])])]),t("p",[a._v("测试相等用==，不相等用/=")]),a._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v('ghci> 5 == 5  \nTrue  \nghci> 1 == 0  \nFalse  \nghci> 5 /= 5  \nFalse  \nghci> 5 /= 4  \nTrue  \nghci> "hello" == "hello"  \nTrue\n')])])]),t("p",[a._v("如果使用不同的数据类型，判断相加或相等，则会报错，例如5+“llama”：")]),a._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v('No instance for (Num [Char])  \narising from a use of `+\' at <interactive>:1:0-9  \nPossible fix: add an instance declaration for (Num [Char])  \nIn the expression: 5 + "llama"  \nIn the definition of `it\': it = 5 + "llama"\n')])])]),t("p",[a._v("+只适用于左右均为数字的情况，==只适用于左右均为可比较类型的情况。另外当5+4.0时，5会转为浮点，输出9.0")]),a._v(" "),t("h2",{attrs:{id:"中缀函数（infix-function）与前缀函数（prefix-function）"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#中缀函数（infix-function）与前缀函数（prefix-function）"}},[a._v("#")]),a._v(" 中缀函数（infix function）与前缀函数（prefix function）")]),a._v(" "),t("p",[a._v("中缀函数就是像四则运算符一样，前后接受两个参数。")]),a._v(" "),t("p",[a._v("大多数不参与数学运算的函数为前缀函数。")]),a._v(" "),t("p",[a._v("在haskell中，函数通过写函数名，空格，和参数来调用：")]),a._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v("ghci> succ 8  \n9 \n")])])]),t("p",[t("code",[a._v("scuu")]),a._v("函数接收任何具有定义的后继的元素作为参数，然后返回它的后继。")]),a._v(" "),t("p",[t("code",[a._v("min")]),a._v("和"),t("code",[a._v("max")]),a._v("则接收两个可以排序的元素，min返回较小的，而max返回较大的。")]),a._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v("ghci> min 9 10  \n9  \nghci> min 3.4 3.2  \n3.2  \nghci> max 100 101  \n101   \n")])])]),t("p",[a._v("函数具有最高的优先级。也就是说下面两个式子相等：")]),a._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v("ghci> succ 9 + max 5 4 + 1  \n16  \nghci> (succ 9) + (max 5 4) + 1  \n16 \n")])])]),t("p",[a._v("接收两个参数的函数也可以是中缀的，这要通过将函数名用反引号包裹来实现。比如"),t("code",[a._v("div")]),a._v("可以实现两个数的整除。"),t("code",[a._v("div 92 10")]),a._v("返回9。但是这样写会搞不清谁除谁。所以可以用中缀函数的形式，即"),t("code",[a._v("92")]),a._v("div"),t("code",[a._v("10")]),a._v("。")]),a._v(" "),t("p",[a._v("在haskell中，只有空格代表函数调用。"),t("strong",[a._v("括号只代表运算优先级")]),a._v(" 。假如有"),t("code",[a._v("bar (bar 3)")]),a._v("这种形式的语句，不代表bar使用bar 3为参数，而是表示先计算bar 3，取得数字，然后再用bar调用那个数字作为参数。在c语言中，会写成"),t("code",[a._v("bar(bar(3))")])])])}),[],!1,null,null,null);e.default=n.exports}}]);