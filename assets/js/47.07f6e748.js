(window.webpackJsonp=window.webpackJsonp||[]).push([[47],{410:function(t,_,v){"use strict";v.r(_);var a=v(14),r=Object(a.a)({},(function(){var t=this,_=t.$createElement,v=t._self._c||_;return v("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[v("h1",{attrs:{id:"golang中des-aes密码的使用"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#golang中des-aes密码的使用"}},[t._v("#")]),t._v(" golang中DES/AES密码的使用")]),t._v(" "),v("h2",{attrs:{id:"des特点"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#des特点"}},[t._v("#")]),t._v(" DES特点")]),t._v(" "),v("p",[t._v("DES是一种"),v("strong",[t._v("64bit明文")]),t._v(" 加密成"),v("strong",[t._v("64bit密文")]),t._v(" 的"),v("strong",[t._v("对称密码算法")]),t._v(" 。它的"),v("strong",[t._v("密钥长度是56bit")]),t._v(" 。 （从规格上讲密钥长度是64bit，但是每隔7bit会设置1bit进行错误检查，因此实际上密钥长度是56bit）")]),t._v(" "),v("p",[t._v("DES以64bit的明文为一个单位进行处理，这64的单位称为"),v("strong",[t._v("分组")]),t._v(" 。以分组为单位处理的密码算法称为"),v("strong",[t._v("分组密码(blockcipher)")]),t._v(" ，des也是分组密码的一种。")]),t._v(" "),v("p",[t._v("DES已被破解，可在一天内被解密。")]),t._v(" "),v("h2",{attrs:{id:"_3des特点"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_3des特点"}},[t._v("#")]),t._v(" 3DES特点")]),t._v(" "),v("p",[t._v("3DES（triple-DES）即三重DES，目的是加强DES的强度，将DES重复3次得到的密码算法。")]),t._v(" "),v("p",[t._v("三重DES密钥在算法中会被分成DES密钥1-2-3。")]),t._v(" "),v("p",[t._v("明文会被密钥1 DES加密，被密钥2 DES解密，再被密钥3 DES加密。（解密顺序反过来）")]),t._v(" "),v("p",[t._v("三重DES的密钥密钥长度为24 byte。（即三个DES密钥的长度）")]),t._v(" "),v("p",[t._v("3DES较为安全，但是效率比较低。")]),t._v(" "),v("p",[t._v("3DES依然是分组密码。")]),t._v(" "),v("h2",{attrs:{id:"aes特点"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#aes特点"}},[t._v("#")]),t._v(" AES特点")]),t._v(" "),v("p",[t._v("AES是取代DES出现的一种加密算法。AES的规格中，密钥长度只有"),v("strong",[t._v("128bit（16byte），192bit，256bit 三种")]),t._v(" 。")]),t._v(" "),v("p",[t._v("AES是一种非常安全的"),v("strong",[t._v("对称加密")]),t._v(" 算法，它也是一种分组密码，分组长度为128 bit / 16 byte。")]),t._v(" "),v("p",[v("strong",[t._v("在golang中提供的接口中，密钥长度只能是16 byte")])]),t._v(" "),v("h2",{attrs:{id:"分组密码的模式"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#分组密码的模式"}},[t._v("#")]),t._v(" 分组密码的模式")]),t._v(" "),v("p",[t._v("可参见配图："),v("a",{attrs:{href:"https://zh.wikipedia.org/wiki/%E5%88%86%E7%BB%84%E5%AF%86%E7%A0%81%E5%B7%A5%E4%BD%9C%E6%A8%A1%E5%BC%8F#%E7%94%B5%E5%AD%90%E5%AF%86%E7%A0%81%E6%9C%AC%EF%BC%88ECB%EF%BC%89",target:"_blank",rel:"noopener noreferrer"}},[t._v("分组密码工作模式"),v("OutboundLink")],1),t._v("。")]),t._v(" "),v("h3",{attrs:{id:"按位异或"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#按位异或"}},[t._v("#")]),t._v(" 按位异或")]),t._v(" "),v("p",[t._v("golang按位异或操作符（XOR）"),v("code",[t._v("^")]),t._v("。（两个二进制数异或相同为0，不同为1）。")]),t._v(" "),v("p",[t._v("神奇特性：a异或b得c，相当于对a加密得c，那么，b异或c也能得到a，相当于对c解密得到a。")]),t._v(" "),v("h3",{attrs:{id:"ecb模式"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#ecb模式"}},[t._v("#")]),t._v(" ECB模式")]),t._v(" "),v("p",[t._v("ECB模式即电子密码本（Electronic Codebook）模式。需要加密的消息按照块密码的块大小被分为数个块，并对每个块进行独立加密/解密。")]),t._v(" "),v("p",[t._v("优点："),v("strong",[t._v("每个块的加密/解密都是独立的，且使用相同的方法进行加密，所以可以进行并行计算。")])]),t._v(" "),v("p",[t._v("缺点：但是这种方法一旦有一个块被破解，使用相同方法可以解密所有密文数据。"),v("strong",[t._v("安全性比较差，用于数据较少的情形，加密前需要把明文数据填充到块大小的整数倍。")]),t._v(" 同样的明文块会被加密成相同的密文块；因此，它不能很好的隐藏数据模式。在某些场合，这种方法不能提供严格的数据保密性。")]),t._v(" "),v("p",[t._v("（不推荐使用，golang中没有提供接口）")]),t._v(" "),v("h3",{attrs:{id:"cbc模式"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#cbc模式"}},[t._v("#")]),t._v(" CBC模式")]),t._v(" "),v("p",[t._v("CBC模式即密码块链接模式（Cipher-block chaining）。在cbc中")])])}),[],!1,null,null,null);_.default=r.exports}}]);